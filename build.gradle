// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.4.2' apply false
    id 'com.android.library' version '8.4.2' apply false
    id 'org.jetbrains.kotlin.android' version '2.0.0' apply false
//    id "jacoco"
//    id "org.sonarqube" version "3.5.0.2730" apply false
}

//apply from: "$project.rootDir/sonar.gradle"

//subprojects {
//    apply plugin: "org.sonarqube"
//    sonarqube {
//        properties {
//            property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/testDebugUnitTestCoverage/testDebugUnitTestCoverage.xml"
//        }
//    }
//}

//sonarqube {
//    properties {
//        property "sonar.projectName", "Hanggar"
//        property "sonar.projectKey", "Hanggar"
//        property "sonar.tests", ["src/test/java", "src/test/kotlin"]
//        property "sonar.java.coveragePlugin", "jacoco"
//        property "sonar.jacoco.reportPath", "**/jacoco/*.exec"
////        property 'sonar.coverage.jacoco.xmlReportPaths', "${project.projectDir}/Hanggar/build/reports/jacoco.xml"
//        property "sonar.android.lint.reportPaths", "build/reports/lint-results.xml"
//        property "sonar.test.inclusions", "**/*Test*/**"
//        property "sonar.sourceEncoding", "UTF-8"
//        property "sonar.sources", "src/main/java"
//        property "sonar.exclusions", '**/*Test*/**,' +
//                '*.json,' +
//                '**/*test*/**,' +
//                '**/*generated*/**,' +
//                '**/.gradle/**,' +
//                '**/di/**,' +
//                '**/data/remote/authentication/**,' +
//                '**/util/common/**,' +
//                '**/*Activity.*,' +
//                '**/*Adapter.*,' +
//
//                // data binding
//                'android/databinding/**/*.class,' +
//                '**/android/databinding/*Binding.class,' +
//                '**/android/databinding/*,' +
//                '**/androidx/databinding/*,' +
//                '**/BR.*,' +
//
//                // android
//                '**/R.class,' +
//                '**/R$*.class,' +
//                '**/BuildConfig.*,' +
//                '**/Manifest*.*,' +
//                '**/*Test*.*,' +
//                'android/**/*.*,' +
//
//                // kotlin
//                '**/*MapperImpl*.*,' +
//                '**/*$ViewInjector*.*,' +
//                '**/*$ViewBinder*.*,' +
//                '**/BuildConfig.*,' +
//                '**/*Component*.*,' +
//                '**/*BR*.*,' +
//                '**/Manifest*.*,' +
//                '**/*$Lambda$*.*,' +
//                '**/*Companion*.*,' +
//                '**/*Module*.*,' +
//                '**/*Dagger*.*,' +
//                '**/*Hilt*.*,' +
//                '**/*MembersInjector*.*,' +
//                '**/*_MembersInjector.class,' +
//                '**/*_Factory*.*,' +
//                '**/*_Provide*Factory*.*,' +
//                '**/*Extensions*.*,' +
//
//                // sealed and data classes
//                '**/*$Result.*,' +
//                '**/*$Result$*.*,' +
//
//                // adapters generated by moshi
//                '**/*JsonAdapter.*,' +
//
//                // Hilt
//                '**/*Module.kt,' +
//                '**/di/**,' +
//                'dagger.hilt.internal/*,' +
//                'hilt_aggregated_deps/*'
//    }
//}
//
//jacoco {
//    toolVersion = "0.8.7"
//    reportsDirectory = layout.buildDirectory.dir('reports')
//}
//
//tasks.withType(Test) {
//    jacoco.includeNoLocationClasses = true
//}
//
//task jacocoTestReport(type: JacocoReport) {
//    reports {
//        xml.enabled true
//        csv.enabled true
//        html.destination file("${buildDir}/reports/coverage")
//        xml.destination file("${buildDir}/reports/jacoco.xml")
//    }
//}
//
//tasks.koverXmlReport {
//    enabled = true
//    xmlReportFile.set(layout.buildDirectory.file("reports/result.xml"))
//}